@model ITLA_Jobs.Models.Vacante
@using Microsoft.AspNet.Identity;
@using ITLA_Jobs.Models
@{
    ViewBag.Title = "Editar";

    BolsaTrabajoEntities db = new BolsaTrabajoEntities();
    var categorias = db.Categoria.ToList();

    SelectList lista = new SelectList(categorias, "Id", "Nombre");
    ViewBag.categoria = lista;

}
<div class="row justify-content-center mt-5">
    <div class="col-12 col-md-8 text-center">

        @{
            if (Model.EmailUsuario == User.Identity.GetUserName() || User.Identity.GetUserName().ToLower() == "admin@gmail.com")
            {
                using (Html.BeginForm("Edit", "Vacantes", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h2>EDITAR VACANTE</h2>
                            <hr />
                            <div class="form-group">
                                <div class="col text-left">
                                    @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control", placeholder = "Nombre de la compañía" } })
                                    @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col  text-left">
                                    @Html.EditorFor(model => model.Direccion_url, new { htmlAttributes = new { @class = "form-control", placeholder = "Dirección URL" } })
                                    @Html.ValidationMessageFor(model => model.Direccion_url, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="ml-3 ml-md-4 col-11">
                                    <input type="file" name="LogoFile" class="form-control custom-file-input " />
                                    <label class="custom-file-label">Editar logo de su compañia...</label>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col text-left">
                                    @Html.EditorFor(model => model.Posicion, new { htmlAttributes = new { @class = "form-control", placeholder = "Posición para ofrecer" } })
                                    @Html.ValidationMessageFor(model => model.Posicion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col text-left">
                                    @Html.EditorFor(model => model.Ubicacion, new { htmlAttributes = new { @class = "form-control", placeholder = "Ubicación de la compañía" } })
                                    @Html.ValidationMessageFor(model => model.Ubicacion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col text-left">
                                    @Html.EditorFor(model => model.CorreoAplicar, new { htmlAttributes = new { @class = "form-control", placeholder = "Correo para aplicar" } })
                                    @Html.ValidationMessageFor(model => model.CorreoAplicar, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col text-left">
                                    @Html.DropDownListFor(model => model.Categoria, ViewBag.categoria as SelectList, "Seleccione categoria", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col  text-left">
                                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control", placeholder = "Descripción o Requisitos de la posición" } })
                                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="d-flex justify-content-center mb-3">
                                    <div class="form-check form-check-inline">
                                        <label>
                                            @Html.RadioButtonFor(model => model.Tipo, "Remoto")
                                            Remoto
                                        </label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <label>
                                            @Html.RadioButtonFor(model => model.Tipo, "Medio tiempo")
                                            Medio Tiempo
                                        </label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <label>
                                            @Html.RadioButtonFor(model => model.Tipo, "Tiempo completo")
                                            Tiempo Completo
                                        </label>
                                    </div>
                                </div>
                                <div class="text-center">
                                    @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="text-left">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            </div>
            <div class="form-group">
                <div class="col">
                    <input type="submit" value="Actualizar" id="submitSave" class="btn btn-block btn-outline-primary btn-lg" />
                </div>
            </div>
        </div>
                }
            }
            else
            {
                <h1 class="text-danger">Usted no puede editar esta vacante</h1>
            }
        }
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {
            $('#submitSave').unbind('click');
            $('#submitSave').on('click', function () {
                $.ajax({
                    url: "/Vacante/Edit",
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    data: JSON.stringify({
                        txtValue: $("#LogoFile").val()
                    }),
                    async: false
                });
            });
        });
    </script>

}
